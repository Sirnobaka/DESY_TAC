/*
 * Control HV V6519 via VME
 *
 * Alessandro Silenzi DESY/FLC 2011
 *
 */

#ifndef __HV6519_H

#define __HV6519_H

#include <iostream>
#include <fstream>
#include <cstdlib>
#include <string>
#include "VME.h"
#include <stdlib.h>

// HV class parent
#include "HV.h"

#define V6519_VSET       0x80
#define V6519_ISET       0x84
#define V6519_VMON       0x88
#define V6519_IMON       0x8C
#define V6519_POWER      0x90
#define V6519_CHSTAT     0x94
#define V6519_TRIPTM     0x98
#define V6519_SVMAX      0x9C
#define V6519_RAMPD      0xA0
#define V6519_RAMPU      0xA4
#define V6519_PWRDWN     0xA8
#define V6519_POLARITY   0xAC
#define V6519_TEMP       0xB0
#define V6519_CHSTAT_CHON(x)   (0x0001==(x&0x0001))?1:0
#define V6519_CHSTAT_RAMPUP(x) (0x0002==(x&0x0002))?1:0
#define V6519_CHSTAT_RAMPDN(x) (0x0004==(x&0x0004))?1:0
#define V6519_CHSTAT_OVC(x)    (0x0008==(x&0x0008))?1:0
#define V6519_CHSTAT_OVV(x)    (0x0010==(x&0x0010))?1:0
#define V6519_CHSTAT_UNV(x)    (0x0020==(x&0x0020))?1:0
#define V6519_CHSTAT_MAXV(x)   (0x0040==(x&0x0040))?1:0
#define V6519_CHSTAT_MAXI(x)   (0x0080==(x&0x0080))?1:0
#define V6519_CHSTAT_TRIP(x)   (0x0100==(x&0x0100))?1:0
#define V6519_CHSTAT_OVP(x)    (0x0200==(x&0x0200))?1:0
#define V6519_CHSTAT_OVT(x)    (0x0400==(x&0x0400))?1:0
#define V6519_CHSTAT_DIS(x)    (0x0800==(x&0x0800))?1:0
#define V6519_CHSTAT_INT(x)    (0x1000==(x&0x1000))?1:0
#define V6519_CHSTAT_UNC(x)    (0x2000==(x&0x2000))?1:0

using namespace std;

class HV6519 : public HV
{
 private:
  int addr;
  int channel;
  int offset;
  VME*     vme;
  
 public:

  // constructor
  HV6519();
  HV6519(int Address,int Channel,VME * vme);
  // destructor
  virtual ~HV6519();

  void SetVoltage(float voltage, bool silentmode);
  float ReadVoltage(void);
  float ReadCurrent(void);
  
};
#endif
